name: Run Azure Login with OpenID Connect
on: [push]

permissions:
      id-token: write
      contents: read

jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    
    - name: 'Run checkout'
      uses: actions/checkout@v2

    - name: 'Run login az'
      run: |
        az account set --subscription 7b2c8510-cb1a-4eff-b866-29eb206b33b0
        az aks get-credentials --resource-group Exo1_group --name Exo1 --overwrite-existing
        # Get the Git user's email
        git_email=$(git config user.email)
    
        # Check if git_email is empty
        if [ -z "$git_email" ]; then
          # Fallback to GitHub user email
          github_email=$(curl -sSL "https://api.github.com/users/${GITHUB_ACTOR}" | jq -r '.email')
          if [ "$github_email" != "null" ]; then
            git_email="$github_email"
          else
            echo "No email associated with GitHub user     ${GITHUB_ACTOR}"
            # Handle this case accordingly, for example, exit with an error
            exit 1
          fi
        fi
    
        # Switch case to set namespace based on email
        case "$git_email" in
            "alex.guillemin@gmail.com")
                kubectl config set-context --current --namespace=workspace-ag-1998
                ;;
            "caramel.alexandre@gmail.com")
                kubectl config set-context --current --namespace=workspace-alc-2000
                ;;
            "benjamin.burstein@edu.devinci.fr")
                kubectl config set-context --current --namespace=workspace-bjb-2000
                ;;
            "martin.deboutray@edu.devinci.fr")
                kubectl config set-context --current --namespace=workspace-mdb-1997
                ;;
            *)
                echo "No namespace mapping found for this email address."
                ;;
        esac

    - name: 'Run Azure CLI commands'
      run: |
        docker build -t devbaam.azurecr.io/alex-hello-world-app .
        az acr login --name devbaam 
        docker push devbaam.azurecr.io/alex-hello-world-app
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml